swagger: "2.0"
info:
  version: "0.0.1"
  title: Recommendations API
# during dev, should point to your local machine
host: morbishop-demo2.apigee.net
# basePath prefixes all resource paths
basePath: /recommendation-parallel-api
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config: {}
x-a127-services: {}
paths:
  /recommendations/{userid}:
    get:
      description: Get personalized customer recommendations.
      # used as the method name of the controller
      parameters:
        - name: userid
          in: path
          description: customer Id to get recommendations for.
          required: true
          type: string
        - name: profile
          in: query
          description: Generic profile criteria "{'gender' :'F', 'ageRange' :'20-24'}"
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/RecommendationsResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /recommendationscores:
    get:
      description: Get scores per userid.
      parameters:
        - name: userid
          in: query
          type: string
          description: customer Id to get recommendations for.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RecommendationsResponse"
  /profilescores:
    get:
      description: Get scores per userid.
      parameters:
        - name: profile
          in: query
          description: Generic profile criteria "{'gender' :'F', 'ageRange' :'20-24'}"
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/RecommendationsResponse"
# complex objects have schema definitions
definitions:
  RecommendationsResponse:
    type: object
    properties:
      entities:
        type: array
        description: represents a collection of recommended products associated for a specific customer
        items:
          type: object
          properties:
            type:
              type: string
              description: this can be removed, since this is internal to BaaS
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
      code:
        type: number
        format: int32